plot(cars, xlim = c(10,15))
plot(cars, pch=2)
data(mtcars)
?boxplot
boxplot(formula= mpg ~ cyl, data= mtcars)
hist(mtcars$mpg)
cd ~/Desktop/Evolution/Tasks#
git add -A#
git commit -m "<Madison" Task 01 upload c"#
git push -u origin master
cd ~ /Desktop/Evolution/Tasks#
git add -A#
git commit -m "<Madison" Task 01 upload c"#
git push -u origin master
setwd('~/Desktop/Evolution/Tasks/Tasks_02')
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)
write.csv(Data, 'rawdata.csv', quote=F)
length(data)
nrow(Data)
ncol(Data)
colnames(Data)
head(Data)
Data[1,]
Data[2,]
Data[1:3,]
Data[1:3, 4]
Data[1:5, 1:3]
Feeds <- which(Data[,9] == 'bottle')
berenMilk <- Data[Feeds ,]
head(berenMilk)
Feeds <- which(Data[, 'event'] == 'bottle')
Feeds <- which (Data$event == 'bottle')
dayID <- apply (Data, 1, function(x) paste (x[1:3], collpase= '-'))
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d" , origin= "2019-04-18")
Data$age <- dateID - dateID[which(Data$event == 'birth')]
head(Data)
Data$age <- dateID - dateID [which(Data$event == 'birth')]
beren2 <- Data
beren3 <- beren2[order(beren2$age),]
head(Data)
beren2 <- Data
order(age)
order("age")
beren3 <- beren2[order(beren2$age),]
Data$age <- dateID - dateID[which(Data$event== 'birth')]
beren3 <- beren2[order(beren2$age),]
beren3 <- beren2[order(beren2$age) ,]
setwd('~/Desktop/Evolution/Tasks/Tasks_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[, 'event'] == 'bottle')#
Feeds <- which (Data$event == 'bottle')#
dayID <- apply (Data, 1, function(x) paste (x[1:3], collpase= '-'))#
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d" , origin= "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event == 'birth')]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]#
write.csv(beren3 , 'beren_new.csv' , quote=F, row.names=FALSE)
dayID <- apply (Data, 1, function(x) paste (x[1:3], collapse= '-'))#
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d" , origin= "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event == 'birth')]
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]
dayID <- apply (Data, 1, function(x) paste (x[1:3], collapse= '-'))
dayID <- apply (Data, 1, function(x) paste (x[1:3], collpse= '-'))
dayID[1]
dayID <- apply (Data, 1, function(x) paste (x[1:3], collpse= '-'))#
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d" , origin= "2019-04-18")
dateID[1]
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d" , origin= "2019-04-18")
dayID[1]
dayID <- apply (Data, 1, function(x) paste (x[1:3], collapse= '-'))#
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d" , origin= "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event == 'birth')]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]#
write.csv(beren3 , 'beren_new.csv' , quote=F, row.names=FALSE)
head(Data)
cd ~/Desktop/Evolution/Tasks
cd ~ /Desktop/Evolution/Tasks
cd ~ / Desktop/Evolution/Tasks
cd ~ /Desktop/Evolution/Tasks
cd~/Desktop/Evolution/Tasks
Feeds <- which(beren3$event =="bottle")
avgMilk <- mean(beren3$value[Feeds])
avgMilk <- mean(beren3$value[Feeds]
avgFeed <- tapply (beren3$value[Feeds], beren3$age[Feeds], mean)
Feeds <- which(beren3$event == " bottle")
avgMilk <- mean(beren3$value [Feeds])
setwd('~/Desktop/Evolution/Tasks/Tasks_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)
length(data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[, 'event'] == 'bottle')#
Feeds <- which (Data$event == 'bottle')#
dayID <- apply (Data, 1, function(x) paste (x[1:3], collapse= '-'))#
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d" , origin= "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event == 'birth')]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]#
write.csv(beren3 , 'beren_new.csv' , quote=F, row.names=FALSE)
Feeds <- which(beren3$event == "bottle")
avgMilk <- mean(beren3$valuep[Feeds])
avgMilk <- mean(beren3$value[Feeds])
avgMilk
Feeds
avgFeed <- tapply(beren3$value [Feeds], beren3$age[Feeds], mean)
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)
numFeeds <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
cor(beren3$value[Feeds], beren3$age[Feeds])
cor.test(beren3$value[Feeds], beren3$age[Feeds])
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])
summary(berenCor)
berenANOVA <-aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])
boxplot( beren3$value[Feeds]~ beren3$caregiver[Feeds], xlab= "who have the bottle" , ylab = "amount of milk consumed (oz)")
?par
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b" , pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), 1ty=2, col='red')
abline (h=mean(totalFeed), 1ty=2, col='red')
abline(h=mean(totalFeed),1ty=2,col='red')
abline(h=mean(totalFeed), lty=2, col='red')
pdf(''r02b-totalMilkByDay.pdf'', height = 4, width = 4)
pdf("r02b-totalMilkByDay.pdf", height = 4, width = 4)
par(las=1, mar=c(5,5,1,1), mpg=c(2, 0.5, 0), tck=-0.01)
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16 xlab="age in days", ylab="ounces of milk")
plot(as.numeric(names(totalFeed)), totalFeed, type="b" , pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
beren4 <-beren3[Naps,]
beren4<- beren3[Naps,]
beren4 <- beren3[Naps,]
beren4<- beren3[naps,]
beren4 <- beren3[Naps,]
setwd('~/Desktop/Evolution/Tasks/Tasks_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[, 'event'] == 'bottle')#
Feeds <- which (Data$event == 'bottle')#
dayID <- apply (Data, 1, function(x) paste (x[1:3], collapse= '-'))#
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d" , origin= "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event == 'birth')]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]#
#
#Correlation doesn't mean causation #
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value [Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
summary(berenCor)#
berenANOVA <-aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
boxplot( beren3$value[Feeds]~ beren3$caregiver[Feeds], xlab= "who have the bottle" , ylab = "amount of milk consumed (oz)")#
?par#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b" , pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02b-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16 xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off()
Circumference <- which(Data[,9] == 'trait_head')
berenCircumference <- Data[Circumference,]
Circumference <- which(Data[,'event'] == 'trait_head')
Circumference <- which (berenCircumference$event == 'trait head')
Circumference <- which(Data$event == 'trait_head')
avgCircumference <-mean(berenCircumference$value[Circumference])
avgCircumference <-tapply(berenCircumference$value[Circumference], berenCirumference$age[Cifcumference], mean)
avgCircumference <-tapply(berenCircumference$value[Circumference], berenCirumference$age[Circumference], mean)
avgCircumference <-tapply(berenCircumference$value[Circumference], berenCircumference$age[Circumference], mean)
varCircumference <-tapply(berenCircumference$value[Circumference], berenCircumference$age[Circumference],mean)
varCirumference <-tapply(berenCircumference$value[Circumference], berenCircumference$age[Circumference], var)
totalCircumference <-tapply(berenCircumference$value[Circumference], berenCircumference$age[Circumference], sum)
numCircumference <-tapply(berenCircumference$value[Circumference], berenCircumference$age[Circumference], length)
cor(berenCircumference$value[Circumference], berenCircumference$age[Circumference])
cor.test(berenCircumference$value[Circumference], berenCircumference$age[Circumference], method="spearm", alternative="greater")
cor.test(berenCircumference$value[Circumference], berenCircumference$age[Circumference], berenCirumference$age[Circumference] method="spearm", alternative="greater")
cor.test(berenCircumference$value[Circumference], berenCircumference$age[Circumference], method="spearm", alternative="greater")
CircumferenceCor <-cor.test(berenCircumference$value[Circumference], berenCircumference$age [Circumference], method="spearm", alternative="greater")
cor.test(berenCircumference$value[Circumference], berenCircumference$age[Circumference]
CircumferenceCor <-cor.test(berenCircumference$value[Circumference], berenCircumference$age [Circumference]
cor.test(berenCircumference$value[Circumference], berenCircumference$age[Circumference])
Circumference <- which(Data[,9] == 'trait_head_circum')#
berenCircumference <- Data[Circumference,]#
Circumference <- which(Data[,'event'] == 'trait_head_circum')#
Circumference <- which(Data$event == 'trait_head_circum')#
Circumference <- which (berenCircumference$event == 'trait_head_circum')#
avgCircumference <-mean(berenCircumference$value[Circumference])#
avgCircumference <-tapply(berenCircumference$value[Circumference], berenCircumference$age[Circumference], mean)#
varCirumference <-tapply(berenCircumference$value[Circumference], berenCircumference$age[Circumference], var)#
totalCircumference <-tapply(berenCircumference$value[Circumference], berenCircumference$age[Circumference], sum)#
numCircumference <-tapply(berenCircumference$value[Circumference], berenCircumference$age[Circumference], length)
cor(berenCircumference$value[Circumference], berenCircumference$age[Circumference])#
cor.test(berenCircumference$value[Circumference], berenCircumference$age[Circumference])#
CircumferenceCor <-cor.test(berenCircumference$value[Circumference], berenCircumference$age [Circumference]
l
cor.test(berenCircumference$value[Circumference], berenCircumference$age[Circumference], method="spearm",alternative="greater")
CircumferenceCor <-cor.test(berenCircumference$value[Circumference], berenCircumference$age [Circumference], method="spearm", alternative="greater")
summary(lengthCor)
summary(headCor)
summary(head_traitCor)
summary(lenghthCor)
summary(CirumferenceCor)
summary(head_trait_CircumferenceCor)
summary(circumCor)
summary(headcircumCor)
par(las=1, mar=c(5,5,1,1), mpg=c(2,0.5,0), tck=-0.01)
par(las=1, mar=c(5,5,1,1), mgp=c(2,0.5,0), tck=-0.01)
summary(circumferenceCor)
summary(headCor)
summary(trait_head_circum)
summary(trait_head_circumCor)
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[, 'event'] == 'bottle')#
Feeds <- which (Data$event == 'bottle')#
dayID <- apply (Data, 1, function(x) paste (x[1:3], collapse= '-'))#
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d" , origin= "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event == 'birth')]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]#
#
#Correlation doesn't mean causation #
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value [Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
summary(berenCor)#
berenANOVA <-aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
boxplot( beren3$value[Feeds]~ beren3$caregiver[Feeds], xlab= "who have the bottle" , ylab = "amount of milk consumed (oz)")#
?par#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b" , pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02b-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16 xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off()#
#The data would be hard to interpret because it is only looking at the amount Beren drinks at the nursery, not anywhere else such as his home.#
#
Bonus#
beren4 <- beren3[Naps,]#
startHour <- (beren4$start_hour)#
startMin <- (beren4$start_minute)#
stopHour <- (beren4$end_hour)#
stopMin <- (beren4$end_minute)
setwd('~/Desktop/Evolution/Tasks/Tasks_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)
Data
x <- read.csv("http://jonsmitchell.com/data/beren.csv")
head(x)
rm(list=ls())
x
Data <- read.csv("http://jonsmitchell.com/data/beren.csv")
Data
x <- read.csv("beren_new.csv")
x
head(x)
beren3 <- read.csv("beren_new.csv", stringsAsFactors=F)
beren4 <- beren3[Naps,]#
startHour <- (beren4$start_hour)#
startMin <- (beren4$start_minute)#
stopHour <- (beren4$end_hour)#
stopMin <- (beren4$end_minute)
Circumference <- which(Data[,9] == 'trait_head_circum')
Circumference <- which(beren3$event == 'trait_head_circum')
Circumference <- which(beren3$event == 'trait_head_circum')#
berenCircumference <- beren3[Circumference,]#
cor(berenCircumference$value[Circumference], berenCircumference$age[Circumference])
Circumference <- which(beren3$event == 'trait_head_circum')
Circumference
berenCircumference <- beren3[Circumference,]
berenCircumference
head(beren3)
which(beren3$age == 0)
which(beren3$age == 2)
which(beren3$age == 4)
Circumference
berenCircumference <- beren3[Circumference,]
berenCircumference
Circumference
cor(berenCircumference$value, berenCircumference$age)
# Make our populations#
setwd('~/Desktop/Evolution/Tasks/Tasks_03')#
trueMean1 <- 5#
trueSD1 <- 5#
population1 <- rnorm(1e6, trueMean1, trueSD1)#
trueMean2 <- 4#
trueSD2 <- 5#
population2 <- rnorm(1e6, trueMean1, trueSD1)#
# Sample of each population#
Size <- 50#
Sample1 <- sample(population1, Size)#
Sample2 <- sample(population2, Size)#
# compare samples w/ boxplot#
boxplot(Sample1, Sample2)#
# The populations were different but not a significant amount
source("http://jonsmitchell.com/code/simFxn04.R")#
MatGrandma <- makeFounder("grandma_mom")#
head(MatGrandma)#
MatGrandpa <- makeFounder("grandpa_mom")#
head(MatGrandpa)#
PatGrandma <- makeFounder("grandma_da")#
head(PatGrandma)#
PatGrandpa <- makeFounder("grandpa_da")#
head(PatGrandpa)#
Alan <- makeBaby(PatGrandma, PatGrandpa)
source("http://jonsmitchell.com/code/simFxn04.R")
source("http://jonsmitchell.com/code/simFxn04.R")
http://jonsmitchell.com/code/simFxn04.R
source("http://jonsmitchell.com/code/simFxn04.R")
setwd('~/Desktop/Evolution/Tasks/Tasks_03')#
trueMean1 <- 5#
trueSD1 <- 5#
population1 <- rnorm(1e6, trueMean1, trueSD1)#
trueMean2 <- 4#
trueSD2 <- 5#
population2 <- rnorm(1e6, trueMean1, trueSD1)#
# Sample of each population#
Size <- 50#
Sample1 <- sample(population1, Size)#
Sample2 <- sample(population2, Size)#
# compare samples w/ boxplot#
boxplot(Sample1, Sample2)#
# The populations were different but not a significant amount#
#
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")#
head(MatGrandma)#
MatGrandpa <- makeFounder("grandpa_mom")#
head(MatGrandpa)#
PatGrandma <- makeFounder("grandma_da")#
head(PatGrandma)#
PatGrandpa <- makeFounder("grandpa_da")#
head(PatGrandpa)#
# make Alan#
Alan <- makeBaby(PatGrandma, PatGrandpa)
Focus <- makeBaby(Brenda, Alan)#
ToMom <- length(
grep(Focus <- makeBaby(Brenda, Alan)#
ToMom <- length( "mom", Focus))/ length(Focus)#
ToMom#
ToMomMom <- length(grep("grandma_mom", Focus))/ length(Focus)#
ToMomMom
Brenda <- makeBaby(MatGrandma, MatGrandpa)
grep(Focus <- makeBaby(Brenda, Alan)#
ToMom <- length( "mom", Focus))/ length(Focus)#
ToMom
MatGrandma <- makeFounder("grandma_mom")#
head(MatGrandma)#
MatGrandpa <- makeFounder("grandpa_mom")#
head(MatGrandpa)#
PatGrandma <- makeFounder("grandma_da")#
head(PatGrandma)#
PatGrandpa <- makeFounder("grandpa_da")#
head(PatGrandpa)#
# make Alan
Alan <- makeBaby(PatGrandma, PatGrandpa)#
# make Brenda#
Brenda <- makeBaby(MatGrandma, MatGrandpa)
# First child, focus child#
grep(Focus <- makeBaby(Brenda, Alan)#
ToMom <- length( "mom", Focus))/ length(Focus)#
ToMom
Focus <- makeBaby(Brenda, Alan)#
ToMom <- length( grep("mom", Focus))/ length(Focus)
ToMom#
# The number is 0.5. I figured it would be around that.#
ToMomMom <- length(grep("grandma_mom", Focus))/ length(Focus)#
ToMomMom#
# The number is 0.4439#
ToMomDad <- length(grep( "grandma_mom", Focus))/ length(Focus)#
ToMomDad#
# The number is 0.4439#
# The number is the same for both maternal grandparents and it is actually higher than I expected.#
Sibling_01 <- makeBaby(Brenda, Alan)#
# I figure it will be a less than 0.5.#
ToSib <- length(intersect(Focus, Sibling_01))/ length(Focus)#
Tosib#
# The number was a lot less than I expected#
# 1000 siblings#
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))/ length(Focus))
ToSib <- length(intersect(Focus, Sibling_01))/ length(Focus)#
ToSib#
# The number was a lot less than I expected#
# 1000 siblings#
ManySiblings <- replicate(1e3, length(intersect(Focus, makeBaby(Brenda, Alan)))/ length(Focus))#
# summarize data#
quantile(ManySiblings)#
mean(ManySiblings)#
# Plot data#
plot(density(ManySiblings), main= "", xlab="proportion shared genes")#
# The values range because you do not inherit all/every gene from everyone in your family tree.
HWE <- function(p) {#
	aa <- p^2#
	ab <- 2*p*(1-p)#
	bb <- (1-p)^2#
	return(c(aa=aa, ab=ab, bb=bb))#
}#
HWE(0.5)#
# aa=0.25 ab=0.50 bb=0.25#
plot(1, 1, type="n", xlim=c(0, 1), ylim=c(0, 1), xlab="freq. allele a", ylab="geno. freq")#
p <- seq(from = 0, to = 1, by = 0.01)#
GenoFreq <- t(sapply(p, HWE))#
# Plot known vs expected#
lines(p, GenoFreq[,"aa"], lwd=2, col="red")#
# Shows inc in geno freq#
lines(p, GenoFreq[, "ab"], lwd=2, col="purple")#
lines(p, GenoFreq[, "bb"], lwd=2, col="blue")#
legend("top", legend=c("aa", "ab", "bb"), col=c("red", "purple", "blue"), lty=1, lwd=2, bty="n")
Pop<- simPop(500)#
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/500, pch=21, bg="red")#
# No it doesn't#
Pop <- simPop(50)#
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/50, pch=22, bg="red")
library(learnPopGen)
install.packages("learnPopGen", dep=T)
library(learnPopGen)
install.packages("maps", dep=T)
library(learnPopGen)
x <- genetic.drift(Ne=200, nrep=5, pause=0.01)#
x <- genetic.drift(Ne=400, nrep=5, pause=0.01)#
x <- genetic.drift(Ne=700, nrep=5, pause=0.01)
PopSizes <- 5:50#
Samples <- rep(PopSizes, 5)#
tExt <- sapply(Samples, function(x) nrow(simPop(x, 500)))#
Line <- lm(tExt ~ Samples)#
summary(Line)#
Line$coef#
plot(Samples, tExt)#
abline(Line)
# Extra Credit#
Line2 <-lm(tExt~Samples+0)#
summary(Line2)#
Line2$coef#
plot(Samples, tExt)#
abline(Line2)
#My hypothesis is that over time Berens head will increase in size.#
# find which rows are measurements of the circumference#
Circumference <- which(beren3$event == 'trait_head_circum')#
#
# make a new object that is only the circumferences#
berenCircumference <- beren3[Circumference,]#
#
# find the correlation between head size and age using the new object made above#
cor(berenCircumference$value, berenCircumference$age)#
#
cor.test(berenCircumference$value[Circumference], berenCircumference$age[Circumference], method="spearm",alternative="greater")
Circumference <- which(beren3$event == 'trait_head_circum')
setwd('~/Desktop/Evolution/Tasks/Tasks_02')#
Data <- read.csv("http://jonsmitchell.com/data/beren.csv")#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(Data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[, 'event'] == 'bottle')#
Feeds <- which (Data$event == 'bottle')#
dayID <- apply (Data, 1, function(x) paste (x[1:3], collapse= '-'))#
dateID <- sapply (dayID, as.Date, format = "%Y-%m-%d" , origin= "2019-04-18")#
Data$age <- dateID - dateID[which(Data$event == 'birth')]#
head(Data)#
beren2 <- Data#
beren3 <- beren2[order(beren2$age),]
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value [Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
summary(berenCor)#
berenANOVA <-aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
boxplot( beren3$value[Feeds]~ beren3$caregiver[Feeds], xlab= "who have the bottle" , ylab = "amount of milk consumed (oz)")#
?par#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b" , pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02b-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16 xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off()#
#The data would be hard to interpret because it is only looking at the amount Beren drinks at the nursery, not anywhere else such as his home.
Circumference <- which(beren3$event == 'trait_head_circum')#
# make a new object that is only the circumferences#
berenCircumference <- beren3[Circumference,]#
# find the correlation between head size and age using the new object made above#
cor(berenCircumference$value, berenCircumference$age)#
# test
cor.test(berenCircumference$value[Circumference], berenCircumference$age[Circumference], method="spearm",alternative="greater")
cor.test(beren3[Circumference], berenCircumference$age[Circumference], method="spearm",alternative="greater")
~/Desktop/Evolution/Tasks/Tasks_04
source("http://jonsmitchell.com/code/fxn05.R")
pop1 <- simPop(Popsize=50, nGenerations=100, initial_p =0.5, h=1, s=0)
plot(1:nrow(Pop1), Pop[,1], ylim=c(0, 1), type = "1", xlab="generation", ylab="allele freq.", lwd=2)
Pop1 <- simPop(Popsize=50, nGenerations=100, initial_p =0.5, h=1, s=0)
plot(1:nrow(Pop1), Pop[,1], ylim=c(0, 1), type = "1", xlab="generation", ylab="allele freq.", lwd=2)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation", ylab="allele freq.", lwd=2)
source("http://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize=50, nGenerations=100, initial_p = 0.5, h = 1, s = 0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "1", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], col="red")
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], col="red")#
legend("topleft", legend = c("a","b"), col=c("black", "red"), lwd=2, bty="n")#
plotFit( nruns = 10, n = 50, ngens = 100, init_p = 0.5, h = 1, s = 0)
source("http://jonsmitchell.com/code/fxn05.R")
> Pop1 <- simPop(Popsize=50, nGenerations=100, initial_p = 0.5, h = 1, s = 0)
Pop1 <- simPop(Popsize=50, nGenerations=100, initial_p = 0.5, h = 1, s = 0)
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], col="red")
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
source("http://jonsmitchell.com/code/fxn05.R")#
#simple simulation#
> Pop1 <- simPop(Popsize=50, nGenerations=100, initial_p = 0.5, h = 1, s = 0)#
> plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
source("http://jonsmitchell.com/code/fxn05.R")#
#simple simulation#
Pop1 <- simPop(Popsize=50, nGenerations=100, initial_p = 0.5, h = 1, s = 0)#
 plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
source("http://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize=50, nGenerations=100, initial_p = 0.5, h = 1, s = 0)#
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
legend("topleft", legend = c("a","b"), col=c("black", "red"), lwd=2, bty="n")
plotFit( nruns = 10, n = 50, ngens = 100, init_p = 0.5, h = 1, s = 0)
Pop1 <- simPop(Popsize=50, nGenerations=100, initial_p = 0.5, h = 1, s = 0)#
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
legend("topleft", legend = c("a","b"), col=c("black", "red"), lwd=2, bty="n")
Pop1 <- simPop(Popsize=50, nGenerations=100, initial_p = 0.5, h = 1, s = 0)#
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col=c("black", "red"), lwd=2, bty="n")
plotFit( nruns = 10, n = 50, ngens = 100, init_p = 0.5, h = 1, s = 0)
Pop1 <- simPop(Popsize=50, nGenerations=100, initial_p = 0.5, h = 1, s = 0)#
plot(1:nrow(Pop1), Pop1[,1], ylim=c(0, 1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a","b"), col=c("black", "red"), lwd=2, bty="n")
plotFit( nruns = 10, n = 50, ngens = 100, init_p = 0.5, h = 1, s = 0)
Expectation <- c(10, 10, 10, 10)
Observed <- c(15, 15, 5, 5)
Chisq <- sum(((Expectation-Observed)^2)/Expectation)
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2~ "="~. (Chisq)), legend.text=c("expected", "observed"))
